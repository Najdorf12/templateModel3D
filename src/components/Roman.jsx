/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 roman3d.gltf 
Author: engine9 (https://sketchfab.com/engine9)
License: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)
Source: https://sketchfab.com/3d-models/rhetorician-a89f035291d843069d73988cc0e25399
Title: Rhetorician
*/

import React, { useRef,useLayoutEffect } from 'react'
import { useGLTF, useAnimations,useScroll } from '@react-three/drei'
import gsap from 'gsap'
import { useFrame } from '@react-three/fiber'

export default function Model(props) {
  const roman = useRef()
  const { nodes, materials, animations } = useGLTF('/roman3d.gltf')
  const { actions } = useAnimations(animations, roman)
 const scroll = useScroll();
const tl = useRef();
/* useFrame((state,delta) => {
  tl.current.seek(scroll.offset * tl.current.duration())
})
useLayoutEffect(()=>{
  tl.current = gsap.timeline({defaults:{duration: 10,ease: 'power1.inOut',}}) 

tl.current
.to(roman.current.position,{ x:-28 }, 0)
.to(roman.current.rotation,{ y: 5 }, 0)

},[])  */

  return (
    <group ref={roman} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="Root">
            <group name="mentor_roman_retopo" position={[-0.266, 0.12, 1.326]}>
              <mesh name="mentor_roman_retopo_0" geometry={nodes.mentor_roman_retopo_0.geometry} material={materials.Stone} />
            </group>
            <group name="Empty" position={[0.161, -0.17, 4.808]} rotation={[-0.104, 0.099, 0.002]} scale={0.892}>
              <group name="nimbus002">
                <mesh name="nimbus002_0" geometry={nodes.nimbus002_0.geometry} material={materials.Crown} />
              </group>
              <group name="nimbus001">
                <mesh name="nimbus001_0" geometry={nodes.nimbus001_0.geometry} material={materials.Crown} />
              </group>
              <group name="nimbus003">
                <mesh name="nimbus003_0" geometry={nodes.nimbus003_0.geometry} material={materials.Crown} />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/roman3d.gltf')
